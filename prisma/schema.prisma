generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  user_id      Int           @id @default(autoincrement())
  username     String
  email        String        @unique
  password     String
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  accounts     Account[]
  assets       Asset[]
  loans        Loan[]
  reminders    Reminder[]
  transactions Transaction[]
}

model Transaction {
  transaction_id Int             @id @default(autoincrement())
  user_id        Int
  type           TransactionType
  amount         Float
  category       String
  description    String?
  date           DateTime
  created_at     DateTime        @default(now())
  updated_at     DateTime        @updatedAt
  user           User            @relation(fields: [user_id], references: [user_id])
}

model Account {
  account_id Int      @id @default(autoincrement())
  user_id    Int
  name       String
  balance    Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [user_id], references: [user_id])
}

model Loan {
  loan_id            Int      @id @default(autoincrement())
  user_id            Int
  amount             Float
  loanType           LoanType
  counterpart        String
  interest_rate      Float
  repayment_schedule String
  start_date         DateTime
  end_date           DateTime
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
  user               User     @relation(fields: [user_id], references: [user_id])
}

model Asset {
  asset_id      Int      @id @default(autoincrement())
  user_id       Int
  name          String
  value         Float
  purchase_date DateTime
  description   String?
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  user          User     @relation(fields: [user_id], references: [user_id])
}

model Reminder {
  reminder_id Int      @id @default(autoincrement())
  user_id     Int
  description String
  date        DateTime
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  user        User     @relation(fields: [user_id], references: [user_id])
}

enum TransactionType {
  expense
  income
}

enum LoanType {
  borrow
  lend
}
